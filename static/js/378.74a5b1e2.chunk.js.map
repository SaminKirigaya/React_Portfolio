{"version":3,"file":"static/js/378.74a5b1e2.chunk.js","mappings":"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","sources":["../node_modules/typed.js/src/defaults.js","../node_modules/typed.js/src/initializer.js","../node_modules/typed.js/src/html-parser.js","../node_modules/typed.js/src/typed.js","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","Components/Introduction.jsx","../node_modules/@mui/icons-material/GitHub.js","../node_modules/@mui/icons-material/Mail.js"],"sourcesContent":["/**\n * Defaults & options\n * @returns {object} Typed defaults & options\n * @public\n */\n\nconst defaults = {\n  /**\n   * @property {array} strings strings to be typed\n   * @property {string} stringsElement ID of element containing string children\n   */\n  strings: [\n    'These are the default values...',\n    'You know what you should do?',\n    'Use your own!',\n    'Have a great day!',\n  ],\n  stringsElement: null,\n\n  /**\n   * @property {number} typeSpeed type speed in milliseconds\n   */\n  typeSpeed: 0,\n\n  /**\n   * @property {number} startDelay time before typing starts in milliseconds\n   */\n  startDelay: 0,\n\n  /**\n   * @property {number} backSpeed backspacing speed in milliseconds\n   */\n  backSpeed: 0,\n\n  /**\n   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n   */\n  smartBackspace: true,\n\n  /**\n   * @property {boolean} shuffle shuffle the strings\n   */\n  shuffle: false,\n\n  /**\n   * @property {number} backDelay time before backspacing in milliseconds\n   */\n  backDelay: 700,\n\n  /**\n   * @property {boolean} fadeOut Fade out instead of backspace\n   * @property {string} fadeOutClass css class for fade animation\n   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n   */\n  fadeOut: false,\n  fadeOutClass: 'typed-fade-out',\n  fadeOutDelay: 500,\n\n  /**\n   * @property {boolean} loop loop strings\n   * @property {number} loopCount amount of loops\n   */\n  loop: false,\n  loopCount: Infinity,\n\n  /**\n   * @property {boolean} showCursor show cursor\n   * @property {string} cursorChar character for cursor\n   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n   */\n  showCursor: true,\n  cursorChar: '|',\n  autoInsertCss: true,\n\n  /**\n   * @property {string} attr attribute for typing\n   * Ex: input placeholder, value, or just HTML text\n   */\n  attr: null,\n\n  /**\n   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n   */\n  bindInputFocusEvents: false,\n\n  /**\n   * @property {string} contentType 'html' or 'null' for plaintext\n   */\n  contentType: 'html',\n\n  /**\n   * Before it begins typing\n   * @param {Typed} self\n   */\n  onBegin: (self) => {},\n\n  /**\n   * All typing is complete\n   * @param {Typed} self\n   */\n  onComplete: (self) => {},\n\n  /**\n   * Before each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  preStringTyped: (arrayPos, self) => {},\n\n  /**\n   * After each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStringTyped: (arrayPos, self) => {},\n\n  /**\n   * During looping, after last string is typed\n   * @param {Typed} self\n   */\n  onLastStringBackspaced: (self) => {},\n\n  /**\n   * Typing has been stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingPaused: (arrayPos, self) => {},\n\n  /**\n   * Typing has been started after being stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingResumed: (arrayPos, self) => {},\n\n  /**\n   * After reset\n   * @param {Typed} self\n   */\n  onReset: (self) => {},\n\n  /**\n   * After stop\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStop: (arrayPos, self) => {},\n\n  /**\n   * After start\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStart: (arrayPos, self) => {},\n\n  /**\n   * After destroy\n   * @param {Typed} self\n   */\n  onDestroy: (self) => {},\n};\n\nexport default defaults;\n","import defaults from './defaults.js';\n/**\n * Initialize the Typed object\n */\n\nexport default class Initializer {\n  /**\n   * Load up defaults & options on the Typed instance\n   * @param {Typed} self instance of Typed\n   * @param {object} options options object\n   * @param {string} elementId HTML element ID _OR_ instance of HTML element\n   * @private\n   */\n\n  load(self, options, elementId) {\n    // chosen element to manipulate text\n    if (typeof elementId === 'string') {\n      self.el = document.querySelector(elementId);\n    } else {\n      self.el = elementId;\n    }\n\n    self.options = { ...defaults, ...options };\n\n    // attribute to type into\n    self.isInput = self.el.tagName.toLowerCase() === 'input';\n    self.attr = self.options.attr;\n    self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\n    // show cursor\n    self.showCursor = self.isInput ? false : self.options.showCursor;\n\n    // custom cursor\n    self.cursorChar = self.options.cursorChar;\n\n    // Is the cursor blinking\n    self.cursorBlinking = true;\n\n    // text content of element\n    self.elContent = self.attr\n      ? self.el.getAttribute(self.attr)\n      : self.el.textContent;\n\n    // html or plain text\n    self.contentType = self.options.contentType;\n\n    // typing speed\n    self.typeSpeed = self.options.typeSpeed;\n\n    // add a delay before typing starts\n    self.startDelay = self.options.startDelay;\n\n    // backspacing speed\n    self.backSpeed = self.options.backSpeed;\n\n    // only backspace what doesn't match the previous string\n    self.smartBackspace = self.options.smartBackspace;\n\n    // amount of time to wait before backspacing\n    self.backDelay = self.options.backDelay;\n\n    // Fade out instead of backspace\n    self.fadeOut = self.options.fadeOut;\n    self.fadeOutClass = self.options.fadeOutClass;\n    self.fadeOutDelay = self.options.fadeOutDelay;\n\n    // variable to check whether typing is currently paused\n    self.isPaused = false;\n\n    // input strings of text\n    self.strings = self.options.strings.map((s) => s.trim());\n\n    // div containing strings\n    if (typeof self.options.stringsElement === 'string') {\n      self.stringsElement = document.querySelector(self.options.stringsElement);\n    } else {\n      self.stringsElement = self.options.stringsElement;\n    }\n\n    if (self.stringsElement) {\n      self.strings = [];\n      self.stringsElement.style.cssText =\n        'clip: rect(0 0 0 0);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px;';\n\n      const strings = Array.prototype.slice.apply(self.stringsElement.children);\n      const stringsLength = strings.length;\n\n      if (stringsLength) {\n        for (let i = 0; i < stringsLength; i += 1) {\n          const stringEl = strings[i];\n          self.strings.push(stringEl.innerHTML.trim());\n        }\n      }\n    }\n\n    // character number position of current string\n    self.strPos = 0;\n\n    // If there is some text in the element\n    self.currentElContent = this.getCurrentElContent(self);\n\n    if (self.currentElContent && self.currentElContent.length > 0) {\n      self.strPos = self.currentElContent.length - 1;\n      self.strings.unshift(self.currentElContent);\n    }\n\n    // the order of strings\n    self.sequence = [];\n\n    // Set the order in which the strings are typed\n    for (let i in self.strings) {\n      self.sequence[i] = i;\n    }\n\n    // current array position\n    self.arrayPos = 0;\n\n    // index of string to stop backspacing on\n    self.stopNum = 0;\n\n    // Looping logic\n    self.loop = self.options.loop;\n    self.loopCount = self.options.loopCount;\n    self.curLoop = 0;\n\n    // shuffle the strings\n    self.shuffle = self.options.shuffle;\n\n    self.pause = {\n      status: false,\n      typewrite: true,\n      curString: '',\n      curStrPos: 0,\n    };\n\n    // When the typing is complete (when not looped)\n    self.typingComplete = false;\n\n    self.autoInsertCss = self.options.autoInsertCss;\n\n    if (self.autoInsertCss) {\n      this.appendCursorAnimationCss(self);\n      this.appendFadeOutAnimationCss(self);\n    }\n  }\n\n  getCurrentElContent(self) {\n    let elContent = '';\n    if (self.attr) {\n      elContent = self.el.getAttribute(self.attr);\n    } else if (self.isInput) {\n      elContent = self.el.value;\n    } else if (self.contentType === 'html') {\n      elContent = self.el.innerHTML;\n    } else {\n      elContent = self.el.textContent;\n    }\n    return elContent;\n  }\n\n  appendCursorAnimationCss(self) {\n    const cssDataName = 'data-typed-js-cursor-css';\n\n    if (!self.showCursor || document.querySelector(`[${cssDataName}]`)) {\n      return;\n    }\n\n    let css = document.createElement('style');\n    css.setAttribute(cssDataName, 'true');\n\n    css.innerHTML = `\n        .typed-cursor{\n          opacity: 1;\n        }\n        .typed-cursor.typed-cursor--blink{\n          animation: typedjsBlink 0.7s infinite;\n          -webkit-animation: typedjsBlink 0.7s infinite;\n                  animation: typedjsBlink 0.7s infinite;\n        }\n        @keyframes typedjsBlink{\n          50% { opacity: 0.0; }\n        }\n        @-webkit-keyframes typedjsBlink{\n          0% { opacity: 1; }\n          50% { opacity: 0.0; }\n          100% { opacity: 1; }\n        }\n      `;\n\n    document.body.appendChild(css);\n  }\n\n  appendFadeOutAnimationCss(self) {\n    const cssDataName = 'data-typed-fadeout-js-css';\n\n    if (!self.fadeOut || document.querySelector(`[${cssDataName}]`)) {\n      return;\n    }\n\n    let css = document.createElement('style');\n    css.setAttribute(cssDataName, 'true');\n\n    css.innerHTML = `\n        .typed-fade-out{\n          opacity: 0;\n          transition: opacity .25s;\n        }\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\n          -webkit-animation: 0;\n          animation: 0;\n        }\n      `;\n\n    document.body.appendChild(css);\n  }\n}\n\nexport let initializer = new Initializer();\n","/**\n * TODO: These methods can probably be combined somehow\n * Parse HTML tags & HTML Characters\n */\n\nexport default class HTMLParser {\n  /**\n   * Type HTML tags & HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n\n  typeHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substring(curStrPos).charAt(0);\n    if (curChar === '<' || curChar === '&') {\n      let endTag = '';\n      if (curChar === '<') {\n        endTag = '>';\n      } else {\n        endTag = ';';\n      }\n      while (curString.substring(curStrPos + 1).charAt(0) !== endTag) {\n        curStrPos++;\n        if (curStrPos + 1 > curString.length) {\n          break;\n        }\n      }\n      curStrPos++;\n    }\n    return curStrPos;\n  }\n\n  /**\n   * Backspace HTML tags and HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n  backSpaceHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substring(curStrPos).charAt(0);\n    if (curChar === '>' || curChar === ';') {\n      let endTag = '';\n      if (curChar === '>') {\n        endTag = '<';\n      } else {\n        endTag = '&';\n      }\n      while (curString.substring(curStrPos - 1).charAt(0) !== endTag) {\n        curStrPos--;\n        if (curStrPos < 0) {\n          break;\n        }\n      }\n      curStrPos--;\n    }\n    return curStrPos;\n  }\n}\n\nexport let htmlParser = new HTMLParser();\n","import { initializer } from './initializer.js';\nimport { htmlParser } from './html-parser.js';\n\n/**\n * Welcome to Typed.js!\n * @param {string} elementId HTML element ID _OR_ HTML element\n * @param {object} options options object\n * @returns {object} a new Typed object\n */\nexport default class Typed {\n  constructor(elementId, options) {\n    // Initialize it up\n    initializer.load(this, options, elementId);\n    // All systems go!\n    this.begin();\n  }\n\n  /**\n   * Toggle start() and stop() of the Typed instance\n   * @public\n   */\n  toggle() {\n    this.pause.status ? this.start() : this.stop();\n  }\n\n  /**\n   * Stop typing / backspacing and enable cursor blinking\n   * @public\n   */\n  stop() {\n    if (this.typingComplete) return;\n    if (this.pause.status) return;\n    this.toggleBlinking(true);\n    this.pause.status = true;\n    this.options.onStop(this.arrayPos, this);\n  }\n\n  /**\n   * Start typing / backspacing after being stopped\n   * @public\n   */\n  start() {\n    if (this.typingComplete) return;\n    if (!this.pause.status) return;\n    this.pause.status = false;\n    if (this.pause.typewrite) {\n      this.typewrite(this.pause.curString, this.pause.curStrPos);\n    } else {\n      this.backspace(this.pause.curString, this.pause.curStrPos);\n    }\n    this.options.onStart(this.arrayPos, this);\n  }\n\n  /**\n   * Destroy this instance of Typed\n   * @public\n   */\n  destroy() {\n    this.reset(false);\n    this.options.onDestroy(this);\n  }\n\n  /**\n   * Reset Typed and optionally restarts\n   * @param {boolean} restart\n   * @public\n   */\n  reset(restart = true) {\n    clearInterval(this.timeout);\n    this.replaceText('');\n    if (this.cursor && this.cursor.parentNode) {\n      this.cursor.parentNode.removeChild(this.cursor);\n      this.cursor = null;\n    }\n    this.strPos = 0;\n    this.arrayPos = 0;\n    this.curLoop = 0;\n    if (restart) {\n      this.insertCursor();\n      this.options.onReset(this);\n      this.begin();\n    }\n  }\n\n  /**\n   * Begins the typing animation\n   * @private\n   */\n  begin() {\n    this.options.onBegin(this);\n    this.typingComplete = false;\n    this.shuffleStringsIfNeeded(this);\n    this.insertCursor();\n    if (this.bindInputFocusEvents) this.bindFocusEvents();\n    this.timeout = setTimeout(() => {\n      // If the strPos is 0, we're starting from the beginning of a string\n      // else, we're starting with a previous string that needs to be backspaced first\n      if (this.strPos === 0) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      } else {\n        this.backspace(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      }\n    }, this.startDelay);\n  }\n\n  /**\n   * Called for each character typed\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  typewrite(curString, curStrPos) {\n    if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n      this.el.classList.remove(this.fadeOutClass);\n      if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n    }\n\n    const humanize = this.humanizer(this.typeSpeed);\n    let numChars = 1;\n\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, true);\n      return;\n    }\n\n    // contain typing function in a timeout humanize'd delay\n    this.timeout = setTimeout(() => {\n      // skip over any HTML chars\n      curStrPos = htmlParser.typeHtmlChars(curString, curStrPos, this);\n\n      let pauseTime = 0;\n      let substr = curString.substring(curStrPos);\n      // check for an escape character before a pause value\n      // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n      // single ^ are removed from string\n      if (substr.charAt(0) === '^') {\n        if (/^\\^\\d+/.test(substr)) {\n          let skip = 1; // skip at least 1\n          substr = /\\d+/.exec(substr)[0];\n          skip += substr.length;\n          pauseTime = parseInt(substr);\n          this.temporaryPause = true;\n          this.options.onTypingPaused(this.arrayPos, this);\n          // strip out the escape character and pause value so they're not printed\n          curString =\n            curString.substring(0, curStrPos) +\n            curString.substring(curStrPos + skip);\n          this.toggleBlinking(true);\n        }\n      }\n\n      // check for skip characters formatted as\n      // \"this is a `string to print NOW` ...\"\n      if (substr.charAt(0) === '`') {\n        while (curString.substring(curStrPos + numChars).charAt(0) !== '`') {\n          numChars++;\n          if (curStrPos + numChars > curString.length) break;\n        }\n        // strip out the escape characters and append all the string in between\n        const stringBeforeSkip = curString.substring(0, curStrPos);\n        const stringSkipped = curString.substring(\n          stringBeforeSkip.length + 1,\n          curStrPos + numChars\n        );\n        const stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n        curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n        numChars--;\n      }\n\n      // timeout for any pause after a character\n      this.timeout = setTimeout(() => {\n        // Accounts for blinking while paused\n        this.toggleBlinking(false);\n\n        // We're done with this sentence!\n        if (curStrPos >= curString.length) {\n          this.doneTyping(curString, curStrPos);\n        } else {\n          this.keepTyping(curString, curStrPos, numChars);\n        }\n        // end of character pause\n        if (this.temporaryPause) {\n          this.temporaryPause = false;\n          this.options.onTypingResumed(this.arrayPos, this);\n        }\n      }, pauseTime);\n\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Continue to the next string & begin typing\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  keepTyping(curString, curStrPos, numChars) {\n    // call before functions if applicable\n    if (curStrPos === 0) {\n      this.toggleBlinking(false);\n      this.options.preStringTyped(this.arrayPos, this);\n    }\n    // start typing each new char into existing string\n    // curString: arg, this.el.html: original text inside element\n    curStrPos += numChars;\n    const nextString = curString.substring(0, curStrPos);\n    this.replaceText(nextString);\n    // loop the function\n    this.typewrite(curString, curStrPos);\n  }\n\n  /**\n   * We're done typing the current string\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  doneTyping(curString, curStrPos) {\n    // fires callback function\n    this.options.onStringTyped(this.arrayPos, this);\n    this.toggleBlinking(true);\n    // is this the final string\n    if (this.arrayPos === this.strings.length - 1) {\n      // callback that occurs on the last typed string\n      this.complete();\n      // quit if we wont loop back\n      if (this.loop === false || this.curLoop === this.loopCount) {\n        return;\n      }\n    }\n    this.timeout = setTimeout(() => {\n      this.backspace(curString, curStrPos);\n    }, this.backDelay);\n  }\n\n  /**\n   * Backspaces 1 character at a time\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  backspace(curString, curStrPos) {\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, false);\n      return;\n    }\n    if (this.fadeOut) return this.initFadeOut();\n\n    this.toggleBlinking(false);\n    const humanize = this.humanizer(this.backSpeed);\n\n    this.timeout = setTimeout(() => {\n      curStrPos = htmlParser.backSpaceHtmlChars(curString, curStrPos, this);\n      // replace text with base text + typed characters\n      const curStringAtPosition = curString.substring(0, curStrPos);\n      this.replaceText(curStringAtPosition);\n\n      // if smartBack is enabled\n      if (this.smartBackspace) {\n        // the remaining part of the current string is equal of the same part of the new string\n        let nextString = this.strings[this.arrayPos + 1];\n        if (\n          nextString &&\n          curStringAtPosition === nextString.substring(0, curStrPos)\n        ) {\n          this.stopNum = curStrPos;\n        } else {\n          this.stopNum = 0;\n        }\n      }\n\n      // if the number (id of character in current string) is\n      // less than the stop number, keep going\n      if (curStrPos > this.stopNum) {\n        // subtract characters one by one\n        curStrPos--;\n        // loop the function\n        this.backspace(curString, curStrPos);\n      } else if (curStrPos <= this.stopNum) {\n        // if the stop number has been reached, increase\n        // array position to next string\n        this.arrayPos++;\n        // When looping, begin at the beginning after backspace complete\n        if (this.arrayPos === this.strings.length) {\n          this.arrayPos = 0;\n          this.options.onLastStringBackspaced();\n          this.shuffleStringsIfNeeded();\n          this.begin();\n        } else {\n          this.typewrite(this.strings[this.sequence[this.arrayPos]], curStrPos);\n        }\n      }\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Full animation is complete\n   * @private\n   */\n  complete() {\n    this.options.onComplete(this);\n    if (this.loop) {\n      this.curLoop++;\n    } else {\n      this.typingComplete = true;\n    }\n  }\n\n  /**\n   * Has the typing been stopped\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @param {boolean} isTyping\n   * @private\n   */\n  setPauseStatus(curString, curStrPos, isTyping) {\n    this.pause.typewrite = isTyping;\n    this.pause.curString = curString;\n    this.pause.curStrPos = curStrPos;\n  }\n\n  /**\n   * Toggle the blinking cursor\n   * @param {boolean} isBlinking\n   * @private\n   */\n  toggleBlinking(isBlinking) {\n    if (!this.cursor) return;\n    // if in paused state, don't toggle blinking a 2nd time\n    if (this.pause.status) return;\n    if (this.cursorBlinking === isBlinking) return;\n    this.cursorBlinking = isBlinking;\n    if (isBlinking) {\n      this.cursor.classList.add('typed-cursor--blink');\n    } else {\n      this.cursor.classList.remove('typed-cursor--blink');\n    }\n  }\n\n  /**\n   * Speed in MS to type\n   * @param {number} speed\n   * @private\n   */\n  humanizer(speed) {\n    return Math.round((Math.random() * speed) / 2) + speed;\n  }\n\n  /**\n   * Shuffle the sequence of the strings array\n   * @private\n   */\n  shuffleStringsIfNeeded() {\n    if (!this.shuffle) return;\n    this.sequence = this.sequence.sort(() => Math.random() - 0.5);\n  }\n\n  /**\n   * Adds a CSS class to fade out current string\n   * @private\n   */\n  initFadeOut() {\n    this.el.className += ` ${this.fadeOutClass}`;\n    if (this.cursor) this.cursor.className += ` ${this.fadeOutClass}`;\n    return setTimeout(() => {\n      this.arrayPos++;\n      this.replaceText('');\n\n      // Resets current string if end of loop reached\n      if (this.strings.length > this.arrayPos) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], 0);\n      } else {\n        this.typewrite(this.strings[0], 0);\n        this.arrayPos = 0;\n      }\n    }, this.fadeOutDelay);\n  }\n\n  /**\n   * Replaces current text in the HTML element\n   * depending on element type\n   * @param {string} str\n   * @private\n   */\n  replaceText(str) {\n    if (this.attr) {\n      this.el.setAttribute(this.attr, str);\n    } else {\n      if (this.isInput) {\n        this.el.value = str;\n      } else if (this.contentType === 'html') {\n        this.el.innerHTML = str;\n      } else {\n        this.el.textContent = str;\n      }\n    }\n  }\n\n  /**\n   * If using input elements, bind focus in order to\n   * start and stop the animation\n   * @private\n   */\n  bindFocusEvents() {\n    if (!this.isInput) return;\n    this.el.addEventListener('focus', (e) => {\n      this.stop();\n    });\n    this.el.addEventListener('blur', (e) => {\n      if (this.el.value && this.el.value.length !== 0) {\n        return;\n      }\n      this.start();\n    });\n  }\n\n  /**\n   * On init, insert the cursor element\n   * @private\n   */\n  insertCursor() {\n    if (!this.showCursor) return;\n    if (this.cursor) return;\n    this.cursor = document.createElement('span');\n    this.cursor.className = 'typed-cursor';\n    this.cursor.setAttribute('aria-hidden', true);\n    this.cursor.innerHTML = this.cursorChar;\n    this.el.parentNode &&\n      this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n  }\n}\n","import { invariant } from '../../utils/errors.mjs';\nimport { setValues } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","import React, { Fragment, useState, useEffect, Suspense } from 'react'\r\nimport Typed from 'typed.js';\r\nimport {motion, useAnimation, useScroll, useTransform} from 'framer-motion'\r\n\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\n\r\nimport homeImgMy from '../Assets/Images/myimgbg.png'\r\n\r\nfunction loadingEffect(){\r\n  return  <div className='container-fluid loader d-flex justify-content-center align-items-center'>\r\n      <div className=\"spinner-border desLoad\" style={{width: '3rem', height: '3rem'}} role=\"status\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n      \r\n      \r\n  </div>\r\n}\r\n\r\nfunction Introduction() {\r\n\r\n  const {scrollY} = useScroll()\r\n  const [volatileFont, setFontSize] = useState('')\r\n\r\n\r\n  const controls = useAnimation();\r\n  const controls2 = useAnimation();\r\n\r\n  const a = 400; // Semi-major axis\r\n  const b = 150; // Semi-minor axis\r\n  const numPoints = 100;\r\n  const mainX = []\r\n  const mainY=[]\r\n\r\n  const a2 = -200; // Semi-major axis\r\n  const b2 = 200; // Semi-minor axis\r\n  const numPoints2 = 100;\r\n  const mainX2 = []\r\n  const mainY2=[]\r\n\r\n  const path = Array.from({ length: numPoints }, (_, i) => {\r\n    const theta = (2 * Math.PI * i) / numPoints;\r\n    const x = a * Math.cos(theta);\r\n    const y = b * Math.sin(theta);\r\n    mainX.push(x)\r\n    mainY.push(y)\r\n  });\r\n\r\n\r\n  const path2 = Array.from({ length: numPoints2 }, (_, i) => {\r\n    const theta = (2 * Math.PI * i) / numPoints2;\r\n    const x = a2 * Math.cos(theta);\r\n    const y = b2 * Math.sin(theta);\r\n    mainX2.push(x)\r\n    mainY2.push(y)\r\n  });\r\n\r\n\r\n  const yShift = useTransform(scrollY, [0,window.innerHeight], [0,-1000])\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    if(window.innerWidth>319 && window.innerWidth<359){\r\n      setFontSize('0.65rem')\r\n    }else{\r\n      setFontSize('0.75rem')\r\n    }\r\n\r\n    controls.start({\r\n      \r\n      scale:[0.3,1,0.3],\r\n      x: mainX,\r\n      y: mainY,\r\n      transition: { duration: 10, repeat: Infinity, ease: 'linear' },\r\n    });\r\n\r\n    controls2.start({\r\n      \r\n      scale:[0.3,1,0.3],\r\n      x: mainX2,\r\n      y: mainY2,\r\n      transition: { duration: 10, repeat: Infinity, ease: 'linear' },\r\n    });\r\n    \r\n\r\n    console.log(window.innerHeight)\r\n    // Define the options for Typed.js\r\n    const options = {\r\n      strings: ['Samin Arnob.', 'A Full-Stack Developer.', 'A MERN Stack Developer.', 'Always Free For Your Project.'],\r\n      typeSpeed: 100, // typing speed in milliseconds\r\n      backSpeed: 50, // backspacing speed in milliseconds\r\n      loop: true, // loop the animation\r\n    };\r\n\r\n    // Create a new Typed instance with the target element and options\r\n    const typed = new Typed('.typing-animation', options);\r\n\r\n    // Clean up the Typed instance on unmount\r\n    return () => {\r\n      typed.destroy();\r\n    };\r\n  }, []);\r\n\r\n\r\n  return (\r\n\r\n    <Fragment>\r\n      <div className='sidePageSize' style={{overflowY:'hidden',overflowX:'hidden'}}> {/* base box which will next time be renamed with same class properties but different backgroundcol and name in different component.*/}\r\n\r\n        <motion.div animate={{x:[-1000,0], transition:{duration: 0.8, type:'spring', stiffness:350}}} whileHover={{scale: [1,1.1],transition:{duration:1, type:'spring', stiffness:350 }}} className='skillDetails d-flex justify-content-center align-items-center flex-column' style={{cursor:'pointer', x:yShift}}>\r\n          <p className='mx-auto'>Hello_&#128151;</p>\r\n          <p style={{fontSize:'1.5rem'}} className='text-center'>I'm <span className='typing-animation' style={{fontWeight:'bold',color:'rgb(152, 28, 253)'}}></span></p>\r\n          <p className='text-center'>I Believe Coding Is Like An Artwork. So, When I Code I Try To Make It As Precise As Possible &#128151;</p>\r\n          <p>\r\n          \r\n          <motion.a href=\"https://github.com/SaminKirigaya\" whileHover={{scale:[1,1.3],borderRadius:'0.3rem'}} transition={{ type:'spring', stiffness:400 }} type=\"button\" className=\"btn btn-primary\"\r\n          style={{ paddingTop : '.25rem', paddingBottom : '.25rem' , paddingLeft : '.5rem', paddingRight : '.5rem', fontSize: volatileFont, marginRight:'1rem', backgroundColor:'rgb(152, 28, 253)', color:'white', border: 'none', borderRadius:'0rem'}}>\r\n            Github <GitHubIcon fontSize='small' />\r\n          </motion.a>\r\n\r\n          <motion.a href=\"https://www.facebook.com/samin.arnob.3\" whileHover={{scale:[1,1.2], borderRadius:'0.3rem'}} transition={{ type:'spring', stiffness:400 }} type=\"button\" className=\"btn btn-primary\"\r\n          style={{ paddingTop : '.25rem', paddingBottom : '.25rem' , paddingLeft : '.5rem', paddingRight : '.5rem', fontSize: volatileFont, backgroundColor:'rgb(152, 28, 253)', color:'white', border: 'none', borderRadius:'0rem'}}>\r\n            Let's Talk <MailIcon fontSize='small' />\r\n          </motion.a>\r\n\r\n          </p>\r\n        </motion.div>\r\n\r\n\r\n        <motion.div animate={{scale:[1.1,1,1.1]}} transition={{duration:1.8,repeat:'infinity'}} className='introPageImgBox d-flex justify-content-center align-items-center flex-column'>\r\n          \r\n          <Suspense fallback={loadingEffect()}>\r\n          <img style={{width:'100%',height:'100%', objectFit:'fill'}} src={homeImgMy} />\r\n          </Suspense>\r\n          \r\n        \r\n        </motion.div>\r\n\r\n\r\n        <motion.div initial={false} animate={controls} transition={{duration:9}} className='firstBall'>\r\n        </motion.div>\r\n\r\n\r\n        <motion.div initial={false} animate={controls2} className='secondBall'>\r\n        </motion.div>\r\n\r\n      </div>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Introduction\r\n","\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 1.27a11 11 0 00-3.48 21.46c.55.09.73-.28.73-.55v-1.84c-3.03.64-3.67-1.46-3.67-1.46-.55-1.29-1.28-1.65-1.28-1.65-.92-.65.1-.65.1-.65 1.1 0 1.73 1.1 1.73 1.1.92 1.65 2.57 1.2 3.21.92a2 2 0 01.64-1.47c-2.47-.27-5.04-1.19-5.04-5.5 0-1.1.46-2.1 1.2-2.84a3.76 3.76 0 010-2.93s.91-.28 3.11 1.1c1.8-.49 3.7-.49 5.5 0 2.1-1.38 3.02-1.1 3.02-1.1a3.76 3.76 0 010 2.93c.83.74 1.2 1.74 1.2 2.94 0 4.21-2.57 5.13-5.04 5.4.45.37.82.92.82 2.02v3.03c0 .27.1.64.73.55A11 11 0 0012 1.27\"\n}), 'GitHub');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Mail');\nexports.default = _default;"],"names":["s","strings","stringsElement","typeSpeed","startDelay","backSpeed","smartBackspace","shuffle","backDelay","fadeOut","fadeOutClass","fadeOutDelay","loop","loopCount","Infinity","showCursor","cursorChar","autoInsertCss","attr","bindInputFocusEvents","contentType","onBegin","t","onComplete","preStringTyped","onStringTyped","onLastStringBackspaced","onTypingPaused","onTypingResumed","onReset","onStop","onStart","onDestroy","e","n","prototype","load","i","el","document","querySelector","options","isInput","tagName","toLowerCase","cursorBlinking","elContent","getAttribute","textContent","isPaused","map","trim","style","cssText","r","Array","slice","apply","children","o","length","a","push","innerHTML","u","strPos","currentElContent","this","getCurrentElContent","unshift","sequence","arrayPos","stopNum","curLoop","pause","status","typewrite","curString","curStrPos","typingComplete","appendCursorAnimationCss","appendFadeOutAnimationCss","value","createElement","setAttribute","body","appendChild","typeHtmlChars","substring","charAt","backSpaceHtmlChars","begin","toggle","start","stop","toggleBlinking","backspace","destroy","reset","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","insertCursor","shuffleStringsIfNeeded","bindFocusEvents","setTimeout","classList","contains","remove","humanizer","test","exec","parseInt","temporaryPause","p","c","doneTyping","keepTyping","setPauseStatus","complete","initFadeOut","add","Math","round","random","sort","className","addEventListener","insertBefore","nextSibling","animationControls","hasMounted","subscribers","Set","controls","subscribe","visualElement","delete","definition","transitionOverride","invariant","animations","forEach","animateVisualElement","Promise","all","set","setValues","values","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect","scrollY","useScroll","_useState","useState","_useState2","_slicedToArray","volatileFont","setFontSize","controls2","mainX","mainY","mainX2","mainY2","yShift","from","_","theta","PI","x","cos","y","sin","useTransform","window","innerHeight","useEffect","innerWidth","scale","transition","duration","repeat","ease","console","log","typed","Typed","_jsx","Fragment","_jsxs","overflowY","overflowX","motion","div","animate","type","stiffness","whileHover","fontSize","fontWeight","color","href","borderRadius","paddingTop","paddingBottom","paddingLeft","paddingRight","marginRight","backgroundColor","border","GitHubIcon","MailIcon","Suspense","fallback","width","height","role","objectFit","src","homeImgMy","initial","_interopRequireDefault","require","exports","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","_interopRequireWildcard","_createSvgIcon","_jsxRuntime","WeakMap","cacheBabelInterop","cacheNodeInterop","_default","jsx","d"],"sourceRoot":""}