{"version":3,"file":"static/js/917.b750cb0f.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","ownKeys","e","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","source","excluded","sourceSymbolKeys","indexOf","propertyIsEnumerable","call","_objectWithoutPropertiesLoose","sourceKeys","_slicedToArray","isArray","l","Symbol","iterator","n","u","a","f","next","done","unsupportedIterableToArray","_toConsumableArray","arrayLikeToArray","iter","from","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","String","Number","_typeof","constructor","_unsupportedIterableToArray","minLen","toString","slice","name","test","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","_ref","_ref2","b","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","isEasingArray","reverseEasing","backInOut","mirrorEasing","easingLookup","circInOut","anticipate","p","pow","easingDefinitionToFunction","definition","invariant","_definition","keyframes","values","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","state","absoluteTimes","offset","convertOffsetToTimes","defaultOffset","mapTimeToKeyframe","interpolate","splice","calculatedDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","max","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","velocity","_ref$mass","mass","warning","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","options","some","spring","resolveSpring","restDelta","restSpeed","_excluded","origin","_getSpringOptions","springOptions","_objectSpread","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","v","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","round","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","callback","memo","hasOwnProperty","Element","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","animate","fill","iterations","direction","animateStyle","owner","syncStart","document","timeline","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","startsWith","isAnimatable","complex","isNone","isZeroValueString","animateMotionValue","transition","valueTransition","getValueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","get","animatableTemplateValue","noneKeyframeIndexes","getAnimatableNone","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","getProps","acceleratedAnimation","optimizedAppearDataAttribute","camelToDash","animateTarget","visualElement","_ref2$delay","transitionOverride","_visualElement$makeTa","makeTargetAnimatable","_visualElement$makeTa2","transitionEnd","willChange","getValue","animations","animationTypeState","animationState","getState","_loop","valueTarget","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","window","HandoffAppearAnimations","hasAnimated","appearId","shouldReduceMotion","isWillChangeMotionValue","add","remove","all","setTarget","animateVariant","variant","resolved","resolveVariant","custom","_ref$transition","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","_transition","_transition$delayChil","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","_ref3","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","isKeyframesTarget","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","acos","Queue","this","order","scheduled","process","index","delete","clear","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","MotionContext","PresenceContext","LazyContext","strict","isRefObject","ref","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","canHandoff","useIsomorphicLayoutEffect","render","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","transform","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","originX","_transformOrigin$orig2","originY","_transformOrigin$orig3","originZ","createHtmlRenderState","copyRawValuesOnly","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","_setPrototypeOf","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","getPrototypeOf","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","valueOf","Super","NewTarget","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","whileHover","setActive","HoverGesture","_Feature","_super","pipe","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","mix","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","parseFloat","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","parse","template","createTransformer","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","subscriptionManager","_len","args","_key","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","output","to","mixAxisDelta","setTargetDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","rotateZ","resetValues","setStaticValue","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","match","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","getPropertyValue","trimmed","isNumericalString","isCSSVariableToken","resolveCSSVariables","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","number","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","_ref4","_ref5","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","toType","fromType","findDimensionValueType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","getOrigin","checkTargetForNewValues","parsed","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","_get","property","receiver","base","object","desc","SVGVisualElement","getAttribute","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","str","replace","checkStringStartsWith","cssVariableRegex","defaultValueType","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","find","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateZ","perspective","alpha","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","getCurrent","currentValues","valueTypes","findValueType","setMotionValue","_ref$transitionEnd","resolveFinalValueInKeyframes","setVariants","variantLabels","getVariant","setValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","transitionOrigin","item","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","_ref$clamp","isClamp","inputLength","interpolator","progressInRange","any","remaining","offsetProgress","fillOffset","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","getSize","eventManagers","passiveEffect","stopPassiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","parseInt","splitColor","_ref$alpha","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","_v$match","floatRegex","_v$match2","maxDefaults","applyDefaultFilter","_v$slice$split","_v$slice$split2","unit","functionRegex","functions","cssVarTokeniser","regex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","_info$values","tokenised","originalValue","parseComplexValue","_analyseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}